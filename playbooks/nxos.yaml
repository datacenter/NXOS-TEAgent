  - hosts: nxos
    gather_facts: no
    connection: network_cli

    tasks:

    # Declare all the variables for creating the sh files in yaml.
    # Sample file can be found in deps directory, please use the same variable names.
    # Add "teagent_hostname" to your host vars and use the same name for your vars yaml
    - include_vars:
        file: "{{ teagent_hostname }}.yaml"

    # Create the guestshell-prep.sh from template file using vars from yaml include
    - name: Create the prep sh file from template file
      delegate_to: local_host
      ansible.builtin.template:
        src: "{{ src_path }}/guestshell-prep.js"
        dest: "{{ file_path_local }}/guestshell-prep.sh"
      register: result

    # Create the guestshell-post.sh from template file using vars from yaml include
    - name: Create the post sh file from template file
      delegate_to: local_host
      ansible.builtin.template:
        src: "{{ src_path }}/guestshell-post.js"
        dest: "{{ file_path_local }}/guestshell-post.sh"
      register: result

    - name: Set non-interactive terminal
      register: result
      cisco.nxos.nxos_command:
        commands:
          -  terminal dont-ask
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    - name: Copy required files to router
      register: result
      cisco.nxos.nxos_file_copy:
        file_pull: true
        local_file: "{{ item }}"
        remote_file: "{{ file_path }}/{{ item }}"
        remote_scp_server: "{{ scp_server }}"
        remote_scp_server_user: "{{ uname }}"
        remote_scp_server_password: "{{ passwd }}"
        vrf: "{{ vrf }}"
      with_items:
         - guestshell-prep.sh
         - guestshell-post.sh
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    # This task along with pause is required only if you want to
    # destroy existing guestshell and create a new one
    - name: Destroy guestshell
      register: result
      ignore_errors: yes
      cisco.nxos.nxos_command:
        commands:
          -  guestshell destroy

    - pause:
        minutes: 5

    # This task configures rootfs/memory for guestshell. Guestshell,
    # if activated already  needs to be disabled and enabled after this task
    # This task is not required, if guestshell is already configured with
    # with required values.
    - name: Configure device for guestshell
      register: result
      cisco.nxos.nxos_command:
        commands:
          -  guestshell resize rootfs 1200
          -  guestshell resize memory 512
          -  guestshell resize cpu 7
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    # This task - disable, along with pause and check for deactivated status tasks
    # are not required if guestshell is already deactivated or not enabled
    - name: Disable guestshell
      register: result
      ignore_errors: yes
      cisco.nxos.nxos_command:
        commands:
          -  guestshell disable
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    - pause:
        minutes: 5

    - name: Checks device for deactivited guestshell
      register: result
      ignore_errors: yes
      cisco.nxos.nxos_command:
        commands: show guestshell
        wait_for: result[0] contains Deactivated
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    # This task - enable along with pause are not required if guestshell is
    # already enabled
    - name: Enable guestshell
      register: result
      cisco.nxos.nxos_command:
        commands: guestshell enable
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    - pause:
        minutes: 5

    - name: Checks device for guestshell status
      register: result
      cisco.nxos.nxos_command:
        commands: show guestshell
        wait_for: result[0] contains Activated
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    - name: Copy and execute guestshell-prep.sh in guestshell
      register: result
      cisco.nxos.nxos_command:
        commands:
          -  run guestshell sudo cp /bootflash/guestshell-prep.sh /root/guestshell-prep.sh
          -  run guestshell sudo ip netns exec management bash /root/guestshell-prep.sh
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    - name: Reboot guestshell
      register: result
      cisco.nxos.nxos_command:
        commands: guestshell reboot
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    - pause:
        minutes: 5

    - name: Checks device for guestshell status
      register: result
      cisco.nxos.nxos_command:
        commands: show guestshell
        wait_for: result[0] contains Activated
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    - name: Copy and execute guestshell-post.sh in guestshell
      register: result
      cisco.nxos.nxos_command:
        commands:
          -  run guestshell sudo cp /bootflash/guestshell-post.sh /root/guestshell-post.sh
          -  run guestshell sudo ip netns exec management bash /root/guestshell-post.sh
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    - name: Checks for te-agent status in guestshell
      register: result
      cisco.nxos.nxos_command:
        commands: run guestshell sudo systemctl status -l te-agent
        wait_for: result[0] contains running
      vars:
        ansible_command_timeout: 500
        ansible_connect_timeout: 500

    # The below tasks can be used to stop, start, uninstall and remove identity
    # of te-agent in guestshell
    #- name: Stop te-agent in guestshell
    #  register: result
    #  cisco.nxos.nxos_command:
    #    commands: run guestshell sudo systemctl stop  te-agent

    #- name: Start te-agent in guestshell
    #  register: result
    #  cisco.nxos.nxos_command:
    #    commands: run guestshell sudo systemctl start  te-agent

    #- name: Uninstall te-agent in guestshell
    #  register: result
    #  cisco.nxos.nxos_command:
    #    commands: run guestshell sudo yum -y remove te-agent

    #- name: Remove te-agent identity in guestshell
    #  register: result
    #  cisco.nxos.nxos_command:
    #    commands: run guestshell sudo rm -rf /bootflash/guestshell/thousandeyes/var/lib/te-agent
